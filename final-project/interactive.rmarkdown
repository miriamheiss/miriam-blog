---
title: "Interactive Plots"
#date: "2022-08-04"
categories:
#image:  
sidebar: true
toc: false
format:
  html:
    code-fold: false
    code-tools: false
---

```{r, echo = FALSE, message = FALSE, warning = FALSE}
library(tidyverse)
library(plotly)
library(patchwork)
```


## Energy
### Taylor Swift
 
The graph below shows the level of energy in Taylor Swift's songs. The most energetic albums are ***1989***, ***Speak Now***, and ***Fearless***. The least energetic albums are ***folklore*** and ***evermore***. Most songs lie between 0.50 and 0.75. She also tends to stick to major keys that are not sharp or flat, like C major, D major, F major, and G major.

::: {.callout-note}
Drag your mouse over the graphs, they show the name of the song!
You can also double click on the legend, that will isolate the album you clicked on!
You can also click on the legend to hide the albums.
:::


```{r, echo = FALSE, message = FALSE, warning = FALSE, out.width = "90%", fig.width = 9}
ts_audio_clean <- readRDS("data/ts_clean_audio.rds") # D
ts_albums_clean <- read_rds("data/ts_albums.rds") # V

ts_graph <- ggplot(data = ts_audio_clean,
       mapping = aes(x = key_mode,
                     y = energy,
                     color = album_name, 
                     text = track_name))+ 
  geom_hline(yintercept = 0.5)+
  geom_point(size = 2)+ 
  scale_color_manual(values = c("deepskyblue2",
                                "lightsalmon4",
                                "goldenrod",
                                "seashell4",
                                "palevioletred1",
                                "darkred",
                                "grey20",
                                "orchid4",
                                "palegreen4"))+
   scale_y_continuous(breaks = c(0.0, 0.25, 0.50, 0.75, 1.00))+
  coord_cartesian(ylim = c(0.0, 1.00))+
  labs(title = "Energy by Key (Taylor Swift)",
       y = "Energy",
       x = "Key", 
       color = "Album")+ 
  #annotate(geom = "label", x = "A#", y = 0, label = "Low")+ 
  #annotate(geom = "label", x = "A#", y = 1, label = "High")+ 
  theme_linedraw(base_size = 12)+ 
  theme(legend.position = "right", axis.text.x = element_text(angle = 90))
```

```{r, warning = FALSE, echo = FALSE}
ggplotly(ts_graph, tooltip = "text")
```



### J. S. Bach

This graph shows the energy of three albums by J. S. Bach. Most songs are under 0.50. The most energetic albums are ***Innovations: Bach***, and ***J. S. Bach: Cantatas***. The least energetic album is ***Bach on Porthan Organ***. The most common keys are G major, D major, E major, B minor, and A# major.


```{r, echo = FALSE, message = FALSE, warning = FALSE, include = FALSE}
bach_audio_clean <- readRDS("data/bach_clean_audio.rds") # D
bach_audio <- readRDS("data/bach_audio.rds") # D

bach_graph <- bach_audio_clean %>%  
  ggplot(mapping = aes(x = key_mode, 
         y = energy, 
         color = album_name, 
         text = track_name))+ 
  geom_hline(yintercept = 0.5)+
  geom_point(size = 2, alpha = 0.75) + 
  scale_color_manual(values = c("#dbac00",
                                "#3e8996",
                                "#913e96",
                                "#de81a0"))+ 
  scale_y_continuous(breaks = c(0.0, 0.25, 0.50, 0.75, 1.00)) + 
  coord_cartesian(ylim = c(0.0, 1.00))+ 
  theme_linedraw(base_size = 12)+
  theme(axis.text.x = element_text(angle = 90), legend.position = "bottom")+ 
  labs(title = "Energy by Key (J. S. Bach)", 
       x = "Key", 
       y = "Energy",
       color = "Album")
```

```{r, echo = FALSE, warning = FALSE}
ggplotly(bach_graph, tooltip = "text")
```


## Valence by Tempo
### Taylor Swift

This graph shows the Valence by tempo for Taylor Swift. Her tempo and valence go up, down, up, down, following the curve, but mainly staying in the middle zone, having a somewhat happy mood. For her, there is a correlation between the x and the y.


```{r, echo = FALSE, warning = FALSE}
ts_audio_raw <- readRDS("data/ts_audio.rds")
ts_albums_raw <- readRDS("data/ts_albums.rds")
ts_albums <- read_rds("data/ts_albums_clean.rds") 

ts_cleaned <-  ts_audio_raw %>% 
  filter(album_name %in% ts_albums) %>% 
  select(track_name, energy, key_mode, album_name, 
         duration_ms, time_signature, tempo, valence)

ts_tempo_plotly <- ts_cleaned %>%   
  ggplot(mapping = aes(x = tempo,
                       y = valence))+ 
  coord_cartesian(xlim = c(50, 220), ylim = c(0.0, 1))+
  geom_point(aes(color = album_name,
                 text = track_name),size = 2.5)+ 
  geom_smooth(se = FALSE, color = "black", method = "loess", formula = y~x) +
  theme_linedraw(base_size = 12)+
  theme(legend.position = "bottom")+ 
  scale_color_manual(values = c("deepskyblue2",
                                "lightsalmon4",
                                "goldenrod",
                                "seashell4",
                                "palevioletred1",
                                "darkred",
                                "grey32",
                                "orchid4",
                                "palegreen4"), 
                     guide = guide_legend(ncol = 2,
                                          title.position = "top"))+ 
  labs(title = "Valence by Tempo (Taylor Swift)", 
       x = "Tempo",
       y = "Valence",
       color = "Album")
```

```{r, echo = FALSE, warning = FALSE}
ggplotly(ts_tempo_plotly, tooltip = "text")
```


### J. S. Bach

Bach usually stays below 175 bpm and is very happy. There is a lot of over plotting at the very top of Bach's plot, and it does not follow the curve very much. For Bach, there is not much correlation between the x and the y.


```{r, warning = FALSE, echo = FALSE}
bach_albums <- read_rds("data/bach_albums_clean.rds") 
bach_audio_raw <- readRDS("data/bach_audio.rds")

bach_cleaned <- bach_audio_raw %>% 
  filter(album_name %in% bach_albums) %>% 
  select(key_mode, track_name, energy, album_name, 
         duration_ms, time_signature, tempo, valence)

bach_tempo_plot <- bach_cleaned %>%
  ggplot(mapping = aes(x = tempo,
                       y = valence))+ 
  coord_cartesian(xlim = c(50, 220), ylim = c(0.0, 1))+
  geom_point(aes(color = album_name, text = track_name), size = 2.5)+ 
  geom_smooth(se = FALSE, method = "loess", formula = y~x, color = "black")+
  theme_linedraw(base_size = 12)+
  theme(legend.position = "bottom")+
  scale_color_manual(values = c("#dbac00",
                                "#3e8996",
                                "#913e96",
                                "#de81a0"), 
                     guide = guide_legend(ncol = 2, 
                                          title.position = "top"))+ 
  labs(title = "Valence by Tempo (J. S. Bach)",
       x = "Tempo",
       y = "Valence",
       color = "Album",
       caption = "Source: Spotify")
```

```{r, warning = FALSE, echo = FALSE}
ggplotly(bach_tempo_plot, tooltip = "text")
```

